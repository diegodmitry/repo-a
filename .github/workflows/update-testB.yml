# name: Sync Environment Variables

# on:
#   push:
#     paths:
#       - '.env'

# jobs:
#   update-testB:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Repository A
#         uses: actions/checkout@v2

#       - name: Extract TEST_A variable
#         run: |
#           echo "TEST_A=$(grep 'TEST_A' .env | cut -d '=' -f2)" >> $GITHUB_ENV

#       - name: Fetch Public Key
#         id: fetch_key
#         env:
#           REPO_B_PAT: ${{ secrets.REPO_B_PAT }}
#         run: |
#           curl -s -H "Authorization: token $REPO_B_PAT" \
#             https://api.github.com/repos/diegodmitry/repo-b/actions/secrets/public-key \
#             -o public-key.json
#           cat public-key.json  # Debugging: Print the fetched public key JSON
#           echo "key_id=$(jq -r .key_id public-key.json)" >> $GITHUB_ENV
#           echo "public_key=$(jq -r .key public-key.json)" >> $GITHUB_ENV

#       - name: Debug Public Key
#         run: |
#           echo "Fetched key_id: ${{ env.key_id }}"
#           echo "Fetched public_key: ${{ env.public_key }}"

#       - name: Install OpenSSL
#         run: sudo apt-get install -y openssl

#       - name: Encrypt Secret
#         if: ${{ env.key_id }} != 'null' && ${{ env.public_key }} != 'null'
#         run: |
#           echo -n "${{ env.TEST_A }}" | \
#           openssl pkeyutl -encrypt -pubin -inkey <(echo "${{ env.public_key }}" | base64 -d) -pkeyopt rsa_padding_mode:oaep -pkeyopt rsa_oaep_md:sha256 | \
#           base64 -w 0 > encrypted_secret.txt
#           echo "encrypted_value=$(cat encrypted_secret.txt)" >> $GITHUB_ENV

#       - name: Update TEST_B in Repository B
#         if: ${{ env.key_id }} != 'null' && ${{ env.public_key }} != 'null'
#         env:
#           REPO_B_PAT: ${{ secrets.REPO_B_PAT }}
#           key_id: ${{ env.key_id }}
#           encrypted_value: ${{ env.encrypted_value }}
#         run: |
#           curl -X PUT \
#             -H "Accept: application/vnd.github+json" \
#             -H "Authorization: token $REPO_B_PAT" \
#             -H "X-GitHub-Api-Version: 2022-11-28" \
#             https://api.github.com/repos/diegodmitry/repo-b/actions/secrets/TEST_B \
#             -d "{\"encrypted_value\":\"${{ env.encrypted_value }}\",\"key_id\":\"${{ env.key_id }}\"}"

# @format

name: Sync Repos

on:
  push:
    branches:
      - main
  # You can add more triggers, such as scheduled events
  # schedule:
  #   - cron: '0 0 * * *'

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source repository
        uses: actions/checkout@v2

      - name: Push to destination repository
        run: |
          git config --global user.email "diegodmitry@hotmail.com"
          git config --global user.name "Diego Dmitry"
          git clone https://${{ env.ORG_NAME }}:${{ secrets.PAT }}@github.com/${{ env.ORG_NAME }}/destination-repo.git
          cd destination-repo
          git remote add ${{ env.ORIGINAL_REPO_NAME }} https://${{ env.ORG_NAME }}:${{ secrets.PAT }}@github.com/${{ env.ORG_NAME }}/${{ env.ORIGINAL_REPO_NAME }}.git
          git remote update
          git merge ${{ env.ORIGINAL_REPO_NAME }}/main
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          ORIGINAL_REPO_NAME: repo-a
          ORG_NAME: diegodmitry
